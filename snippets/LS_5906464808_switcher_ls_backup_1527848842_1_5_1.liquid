{% include 'LS_5906464808_global' %}{% capture lsindex%}{% increment lsrandomizer %}{% endcapture %} <nav id='ls-lang-switcher-{{ lsindex }}' onclick="if( this.querySelector('div') ) { this.querySelector('div').classList.toggle('opened'); }" {% if shop.metafields.langshop['switcherStyle'] != '1' %}class='ls-lang-switcher-wrapper {% if shop.metafields.langshop['switcherStyle'] %}{{ shop.metafields.langshop['switcherStyle'] }}{% else %}ls-style-theme-a{% endif %}'{% endif %}></nav><script type="text/javascript"> if( typeof LS === "object" ) { (function(_this){ var switcher_id = 'ls-lang-switcher-{{ lsindex }}'; var switcher = document.getElementById(switcher_id); if( ! switcher ) { return false; } var switcher_url_obj = {}, search_url_object = _this.getSearchParameters(); search_url_object['cache'] = "false"; search_url_object[_this.currUrlPrefix] = _this.currency; for( var idx = 0; idx < _this.languages.length; idx++ ) { if ( _this.urlModifyType === "get" ) { search_url_object[_this.getUrlPrefix] = _this.languages[idx].lang_id; switcher_url_obj[_this.languages[idx].lang_id] = window.location.protocol + "//" + window.location.hostname + window.location.pathname + "?" + _this.encodeQueryData(search_url_object); } else if( _this.urlModifyType === "hash" ) { switcher_url_obj[_this.languages[idx].lang_id] = window.location.protocol + "//" + window.location.hostname + window.location.pathname + "?" + _this.encodeQueryData(search_url_object) + "#" + _this.languages[idx].lang_id; } else if( _this.urlModifyType === "domains" && _this.mdomains ) { var mdomains = JSON.parse(_this.mdomains); if( mdomains && _this.languages[idx].lang_id in mdomains ) { var mdomain = mdomains[_this.languages[idx].lang_id].split(','); switcher_url_obj[_this.languages[idx].lang_id] = window.location.protocol + "//" + mdomain[0] + window.location.pathname + "?" + _this.encodeQueryData(search_url_object); } } } var switcherType = ( _this.switcherType ) ? _this.switcherType : "li-horizontal"; if( _this.switchersStyleSets ) { _this.styleGenerator( switcher_id, _this.switcherStyle, _this.switcherType, _this.switchersStyleSets.language ); } var i, html, ls_href_start, ls_href_end, ls_flag_src, ls_active; var needle = _this.languages.map(function(x) {return x.lang_id; }).indexOf(_this.currentLang); if( needle < 0) { needle = 0; } switch(switcherType) { case 'li-horizontal-non-flags': html = "<ul class='ls-" + switcherType + "'>"; for( i = 0; i < _this.languages.length; i++ ) { ls_href_start = ( _this.languages[i].lang_id in switcher_url_obj ) ? "<a href='" + switcher_url_obj[_this.languages[i].lang_id] + "'>" : ""; ls_href_end = ( _this.languages[i].lang_id in switcher_url_obj ) ? "</a>" : ""; ls_active = ( _this.languages[i].lang_id === _this.currentLang ) ? "class='ls-lang-switcher-active'" : ""; html += "<li data-lang-id='" + _this.languages[i].lang_id + "' " + ls_active + ">" + ls_href_start + _this.escape(_this.languages[i].lang_title) + ls_href_end + "</li>"; } html += "</ul>"; switcher.innerHTML = html; break; case 'li-horizontal-non-text': html = "<ul class='ls-" + switcherType + "'>"; for( i = 0; i < _this.languages.length; i++ ) { ls_href_start = ( _this.languages[i].lang_id in switcher_url_obj ) ? "<a href='" + switcher_url_obj[_this.languages[i].lang_id] + "'>" : ""; ls_href_end = ( _this.languages[i].lang_id in switcher_url_obj ) ? "</a>" : ""; ls_flag_src = ( _this.languages[i].lang_flag ) ? _this.languages[i].lang_flag : "{{shop.secure_url}}/apps/langshop/assets/frontend/img/flags/" + _this.languages[i].lang_id + ".png"; ls_active = ( _this.languages[i].lang_id === _this.currentLang ) ? "class='ls-lang-switcher-active'" : ""; html += "<li data-lang-id='" + _this.languages[i].lang_id + "' " + ls_active + ">" + ls_href_start + "<span class='flag-wrap'>" + "<img src=" + ls_flag_src + " />" + "</span>" + ls_href_end + "</li>"; } html += "</ul>"; switcher.innerHTML = html; break; case 'li-horizontal': html = "<ul class='ls-" + switcherType + "'>"; for( i = 0; i < _this.languages.length; i++ ) { ls_href_start = ( _this.languages[i].lang_id in switcher_url_obj ) ? "<a href='" + switcher_url_obj[_this.languages[i].lang_id] + "'>" : ""; ls_href_end = ( _this.languages[i].lang_id in switcher_url_obj ) ? "</a>" : ""; ls_active = ( _this.languages[i].lang_id === _this.currentLang ) ? "class='ls-lang-switcher-active'" : ""; ls_flag_src = ( _this.languages[i].lang_flag ) ? _this.languages[i].lang_flag : "{{shop.secure_url}}/apps/langshop/assets/frontend/img/flags/" + _this.languages[i].lang_id + ".png"; html += "<li data-lang-id='" + _this.languages[i].lang_id + "' " + ls_active + ">" + ls_href_start + "<span class='flag-wrap'>" + "<img src=" + ls_flag_src + " />" + "</span>" + _this.escape(_this.languages[i].lang_title) + ls_href_end + "</li>"; } html += "</ul>"; switcher.innerHTML = html; break; case 'li-vertical-non-flags': html = "<div class='ls-" + switcherType + "'>"; html += "<span data-lang-id='" + _this.languages[needle].lang_id + "' class='ls-lang-switcher-active'>" + _this.escape(_this.languages[needle].lang_title) + "</span>"; html += "<ul>"; for( i = 0; i < _this.languages.length; i++ ) { ls_href_start = ( _this.languages[i].lang_id in switcher_url_obj ) ? "<a href='" + switcher_url_obj[_this.languages[i].lang_id] + "'>" : ""; ls_href_end = ( _this.languages[i].lang_id in switcher_url_obj ) ? "</a>" : ""; html += ( i !== needle ) ? "<li data-lang-id='" + _this.languages[i].lang_id + "'>" + ls_href_start + _this.escape(_this.languages[i].lang_title) + ls_href_end + "</li>" : ""; } html += "</ul></div>"; switcher.innerHTML = html; break; case 'li-vertical-non-text': ls_flag_src = ( _this.languages[needle].lang_flag ) ? _this.languages[needle].lang_flag : "{{shop.secure_url}}/apps/langshop/assets/frontend/img/flags/" + _this.languages[needle].lang_id + ".png"; html = "<div class='ls-" + switcherType + "'>"; html += "<span data-lang-id='" + _this.languages[needle].lang_id + "' class='ls-lang-switcher-active'>" + "<span class='flag-wrap'>" + "<img src=" + ls_flag_src + " />" + "</span>" + "</span>"; html += "<ul>"; for( i = 0; i < _this.languages.length; i++ ) { ls_href_start = ( _this.languages[i].lang_id in switcher_url_obj ) ? "<a href='" + switcher_url_obj[_this.languages[i].lang_id] + "'>" : ""; ls_href_end = ( _this.languages[i].lang_id in switcher_url_obj ) ? "</a>" : ""; if( i !== needle ) { ls_flag_src = ( _this.languages[i].lang_flag ) ? _this.languages[i].lang_flag : "{{shop.secure_url}}/apps/langshop/assets/frontend/img/flags/" + _this.languages[i].lang_id + ".png"; html += "<li data-lang-id='" + _this.languages[i].lang_id + "'>" + ls_href_start + "<span class='flag-wrap'>" + "<img src=" + ls_flag_src + " />" + "</span>" + ls_href_end + "</li>"; } } html += "</ul></div>"; switcher.innerHTML = html; break; case 'li-vertical': ls_flag_src = ( _this.languages[needle].lang_flag ) ? _this.languages[needle].lang_flag : "{{shop.secure_url}}/apps/langshop/assets/frontend/img/flags/" + _this.languages[needle].lang_id + ".png"; html = "<div class='ls-" + switcherType + "'>"; html += "<span data-lang-id='" + _this.languages[needle].lang_id + "' class='ls-lang-switcher-active'>" + "<span class='flag-wrap'>" + "<img src=" + ls_flag_src + " />" + "</span>" + _this.escape(_this.languages[needle].lang_title) + "</span>"; html += "<ul>"; for( i = 0; i < _this.languages.length; i++ ) { ls_href_start = ( _this.languages[i].lang_id in switcher_url_obj ) ? "<a href='" + switcher_url_obj[_this.languages[i].lang_id] + "'>" : ""; ls_href_end = ( _this.languages[i].lang_id in switcher_url_obj ) ? "</a>" : ""; if( i !== needle ) { ls_flag_src = ( _this.languages[i].lang_flag ) ? _this.languages[i].lang_flag : "{{shop.secure_url}}/apps/langshop/assets/frontend/img/flags/" + _this.languages[i].lang_id + ".png"; html += "<li data-lang-id='" + _this.languages[i].lang_id + "'>" + ls_href_start + "<span class='flag-wrap'>" + "<img src=" + ls_flag_src + " />" + "</span>" + _this.escape(_this.languages[i].lang_title) + ls_href_end + "</li>"; } } html += "</ul></div>"; switcher.innerHTML = html; break; case 'select': var select = document.createElement("SELECT"); for( i = 0; i < _this.languages.length; i++ ) { var option = document.createElement("OPTION"); option.text = _this.languages[i].lang_title; option.value = _this.languages[i].lang_id; if( _this.languages[i].lang_id === _this.currentLang ) { option.selected = true; } select.add(option, null); } switcher.appendChild(select); break; default: return false; } function setElementsIndexes(ls_lang_switcher) { if (_this.switcherStyle !== "ls-style-theme-b") { return true; } var indexZ = 0, styles, indexDirection = "up", totalIndexes = _this.languages.length; [].forEach.call(ls_lang_switcher.querySelectorAll('li'), function (el) { if (el.classList.contains('ls-lang-switcher-active')) { indexZ = totalIndexes; indexDirection = "down"; } else { if (indexDirection === "up") { indexZ++; styles = "z-index:" + indexZ + "; direction: ltr;"; } else { indexZ--; styles = "z-index:" + indexZ + "; direction: rtl;"; } el.setAttribute('style', styles); } }); } setElementsIndexes(switcher); if( switcherType === "select" ) { switcher.querySelector('select').addEventListener('change', function(evt){ var lang = evt.target.value; if( lang === _this.currentLang ) { return false; } if( _this.buildify ) { var detail = ( lang !== _this.defaultLang ) ? lang : ''; _this.setCookie('ls_lang', lang, 30); _this.cartLangUpdate( lang, false ); document.dispatchEvent(new CustomEvent('buildify-preview/switch', { detail: detail })); return false; } LS.location = window.location.href; if( _this.urlModify === '1' ) { if( _this.getUrlPrefix in _this.urlParams && _this.urlModifyType === 'get' ) { LS.location = LS.location.replace(_this.getUrlPrefix + "=" + _this.urlParams[_this.getUrlPrefix], _this.getUrlPrefix + "=" + lang); window.history.replaceState(null, null, LS.location); } else if( _this.urlModifyType === 'hash' ) { location.hash = lang; } else if( _this.urlModifyType === 'domains' && _this.mdomains ) { var mdomains = JSON.parse(_this.mdomains); if( mdomains && lang in mdomains ) { var mdomain = mdomains[lang].split(','); var url = window.location; url = url.toString(); url = url.replace(window.location.host,mdomain[0]); window.location = url; } } } _this.setCookie('ls_lang', lang, 30); _this.cartLangUpdate( lang, true ); }); } else { [].forEach.call(switcher.querySelectorAll('li'), function(el) { if(el.querySelector('a')) { el.querySelector('a').onclick = function( event ) { event.preventDefault(); } } el.addEventListener('click', function(evt){ var target = _this.getClickAncestor(evt.target, 'li'); if( target === null ) { return false; } var lang = target.getAttribute('data-lang-id'); if( lang === _this.currentLang ) { return false; } if( _this.buildify ) { var detail = ( lang !== _this.defaultLang ) ? lang : ''; _this.setCookie('ls_lang', lang, 30); _this.cartLangUpdate( lang, false ); document.dispatchEvent(new CustomEvent('buildify-preview/switch', { detail: detail })); return false; } LS.location = window.location.href; if( _this.urlModify === '1' ) { if( _this.getUrlPrefix in _this.urlParams && _this.urlModifyType === 'get' ) { LS.location = LS.location.replace(_this.getUrlPrefix + "=" + _this.urlParams[_this.getUrlPrefix], _this.getUrlPrefix + "=" + lang); window.history.replaceState(null, null, LS.location); } else if( _this.urlModifyType === 'hash' ) { location.hash = lang; } else if( _this.urlModifyType === 'domains' && _this.mdomains ) { var mdomains = JSON.parse(_this.mdomains); if( mdomains && lang in mdomains ) { var mdomain = mdomains[lang].split(','); var url = window.location; url = url.toString(); url = url.replace(window.location.host,mdomain[0]); window.location = url; } } } _this.setCookie('ls_lang', lang, 30); _this.cartLangUpdate( lang, true ); }); }); } }(LS.localization)); }</script>