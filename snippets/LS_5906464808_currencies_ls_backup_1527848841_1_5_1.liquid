{% include 'LS_5906464808_global' %}{% capture lsindex %}{% increment lsrandomizer %}{% endcapture %}{% if LS_5906464808_curr and shop.metafields.langshop['currSwitcherType'] and shop.metafields.langshop['currSwitcherType'] != "disabled" %} <nav id="ls-curr-switcher-{{ lsindex }}" onclick="if( this.querySelector('div') ) { this.querySelector('div').classList.toggle('opened'); }" {% if shop.metafields.langshop['currSwitcherStyle'] != '1' %}class='ls-curr-switcher-wrapper {% if shop.metafields.langshop['currSwitcherStyle'] %}{{ shop.metafields.langshop['currSwitcherStyle'] }}{% else %}ls-style-theme-a{% endif %}'{% endif %}></nav> <script type="text/javascript"> if (typeof LS === "object") { (function (_this) { var ls_currency = '{{ LS_5906464808_curr }}', shop_currency = '{{ shop.currency | downcase }}', ls_curr_switcher_type = '{{ shop.metafields.langshop['currSwitcherType'] }}', ls_curr_switcher_style = '{{ shop.metafields.langshop['currSwitcherStyle'] }}', ls_currencies = _this.currencies, ls_curr_switcher = document.getElementById("ls-curr-switcher-{{ lsindex }}"); if( ls_curr_switcher && ls_curr_switcher_type && ls_curr_switcher_type !== "disabled" && ls_currencies !== null && typeof ls_currencies === 'object' && typeof LS === "object" ) { if( ls_currencies.map(function (x) { return x.currId; }).indexOf(shop_currency) < 0 ) { ls_curr_switcher.innerHTML = "Your main currency (" + shop_currency.toUpperCase() + ") not found in currencies list."; return false; } var switcher_url_obj = {}, search_url_object = _this.getSearchParameters(); search_url_object['cache'] = "false"; for (var idx in ls_currencies) { if( ! ls_currencies.hasOwnProperty(idx) ) { continue; } search_url_object[_this.currUrlPrefix] = ls_currencies[idx].currId; if ( _this.urlModifyType === "get" ) { search_url_object[_this.getUrlPrefix] = _this.currentLang; switcher_url_obj[ls_currencies[idx].currId] = window.location.protocol + "//" + window.location.hostname + window.location.pathname + "?" + _this.encodeQueryData(search_url_object); } else if( _this.urlModifyType === "hash" ) { switcher_url_obj[ls_currencies[idx].currId] = window.location.protocol + "//" + window.location.hostname + window.location.pathname + "?" + _this.encodeQueryData(search_url_object) + "#" + _this.currentLang; } else if( _this.urlModifyType === "domains" && _this.mdomains ) { var mdomains = JSON.parse(_this.mdomains); if( mdomains && _this.currentLang in mdomains ) { var mdomain = mdomains[_this.currentLang].split(','); switcher_url_obj[ls_currencies[idx].currId] = window.location.protocol + "//" + mdomain[0] + window.location.pathname + "?" + _this.encodeQueryData(search_url_object); } } } if (_this.switchersStyleSets) { _this.styleGenerator("ls-curr-switcher-{{ lsindex }}", ls_curr_switcher_style, ls_curr_switcher_type, _this.switchersStyleSets.currency); } var i, html, ls_href_start, ls_href_end, ls_flag_src, ls_active; var needle = ls_currencies.map(function (x) {return x.currId;}).indexOf(ls_currency); if( needle < 0 ) { needle = 0; } switch (ls_curr_switcher_type) { case 'li-horizontal-non-flags': html = "<ul class='ls-" + ls_curr_switcher_type + "'>"; for (i in ls_currencies) { if( ! ls_currencies.hasOwnProperty(i) ) { continue; } ls_href_start = ( ls_currencies[i].currId in switcher_url_obj ) ? "<a href='" + switcher_url_obj[ls_currencies[i].currId] + "'>" : ""; ls_href_end = ( ls_currencies[i].currId in switcher_url_obj ) ? "</a>" : ""; ls_active = ( ls_currencies[i].currId === ls_currency ) ? "class='ls-curr-switcher-active'" : ""; html += "<li data-currid='" + ls_currencies[i].currId + "' " + ls_active + ">" + ls_href_start + _this.escape(ls_currencies[i].title) + ls_href_end + "</li>"; } html += "</ul>"; ls_curr_switcher.innerHTML = html; break; case 'li-horizontal-non-text': html = "<ul class='ls-" + ls_curr_switcher_type + "'>"; for (i in ls_currencies) { if( ! ls_currencies.hasOwnProperty(i) ) { continue; } ls_href_start = ( ls_currencies[i].currId in switcher_url_obj ) ? "<a href='" + switcher_url_obj[ls_currencies[i].currId] + "'>" : ""; ls_href_end = ( ls_currencies[i].currId in switcher_url_obj ) ? "</a>" : ""; ls_flag_src = ls_currencies[i].currIcon; ls_active = ( ls_currencies[i].currId === ls_currency ) ? "class='ls-curr-switcher-active'" : ""; html += "<li data-currid='" + ls_currencies[i].currId + "' " + ls_active + ">" + ls_href_start + "<span class='flag-wrap'>" + "<img src=" + ls_flag_src + " />" + "</span>" + ls_href_end + "</li>"; } html += "</ul>"; ls_curr_switcher.innerHTML = html; break; case 'li-horizontal': html = "<ul class='ls-" + ls_curr_switcher_type + "'>"; for (i in ls_currencies) { if( ! ls_currencies.hasOwnProperty(i) ) { continue; } ls_href_start = ( ls_currencies[i].currId in switcher_url_obj ) ? "<a href='" + switcher_url_obj[ls_currencies[i].currId] + "'>" : ""; ls_href_end = ( ls_currencies[i].currId in switcher_url_obj ) ? "</a>" : ""; ls_active = ( ls_currencies[i].currId === ls_currency ) ? "class='ls-curr-switcher-active'" : ""; ls_flag_src = ls_currencies[i].currIcon; html += "<li data-currid='" + ls_currencies[i].currId + "' " + ls_active + ">" + ls_href_start + "<span class='flag-wrap'>" + "<img src=" + ls_flag_src + " />" + "</span>" + _this.escape(ls_currencies[i].title) + ls_href_end + "</li>"; } html += "</ul>"; ls_curr_switcher.innerHTML = html; break; case 'li-vertical-non-flags': html = "<div class='ls-" + ls_curr_switcher_type + "'>"; html += "<span data-currid='" + ls_currencies[needle].currId + "' class='ls-curr-switcher-active'>" + _this.escape(ls_currencies[needle].title) + "</span>"; html += "<ul>"; for (i in ls_currencies) { if( ! ls_currencies.hasOwnProperty(i) ) { continue; } ls_href_start = ( ls_currencies[i].currId in switcher_url_obj ) ? "<a href='" + switcher_url_obj[ls_currencies[i].currId] + "'>" : ""; ls_href_end = ( ls_currencies[i].currId in switcher_url_obj ) ? "</a>" : ""; html += ( parseInt(i) !== needle ) ? "<li data-currId='" + ls_currencies[i].currId + "'>" + ls_href_start + _this.escape(ls_currencies[i].title) + ls_href_end + "</li>" : ""; } html += "</ul></div>"; ls_curr_switcher.innerHTML = html; break; case 'li-vertical-non-text': ls_flag_src = ls_currencies[needle].currIcon; html = "<div class='ls-" + ls_curr_switcher_type + "'>"; html += "<span data-currid='" + ls_currencies[needle].currId + "' class='ls-curr-switcher-active'>" + "<span class='flag-wrap'>" + "<img src=" + ls_flag_src + " />" + "</span>" + "</span>"; html += "<ul>"; for (i in ls_currencies) { if( ! ls_currencies.hasOwnProperty(i) ) { continue; } ls_href_start = ( ls_currencies[i].currId in switcher_url_obj ) ? "<a href='" + switcher_url_obj[ls_currencies[i].currId] + "'>" : ""; ls_href_end = ( ls_currencies[i].currId in switcher_url_obj ) ? "</a>" : ""; if (parseInt(i) !== needle) { ls_flag_src = ls_currencies[i].currIcon; html += "<li data-currid='" + ls_currencies[i].currId + "'>" + ls_href_start + "<span class='flag-wrap'>" + "<img src=" + ls_flag_src + " />" + "</span>" + ls_href_end + "</li>"; } } html += "</ul></div>"; ls_curr_switcher.innerHTML = html; break; case 'li-vertical': ls_flag_src = ls_currencies[needle].currIcon; html = "<div class='ls-" + ls_curr_switcher_type + "'>"; html += "<span data-currid='" + ls_currencies[needle].currId + "' class='ls-curr-switcher-active'>" + "<span class='flag-wrap'>" + "<img src=" + ls_flag_src + " />" + "</span>" + _this.escape(ls_currencies[needle].title) + "</span>"; html += "<ul>"; for (i in ls_currencies) { if( ! ls_currencies.hasOwnProperty(i) ) { continue; } ls_href_start = ( ls_currencies[i].currId in switcher_url_obj ) ? "<a href='" + switcher_url_obj[ls_currencies[i].currId] + "'>" : ""; ls_href_end = ( ls_currencies[i].currId in switcher_url_obj ) ? "</a>" : ""; if (parseInt(i) !== needle) { ls_flag_src = ls_currencies[i].currIcon; html += "<li data-currid='" + ls_currencies[i].currId + "'>" + ls_href_start + "<span class='flag-wrap'>" + "<img src=" + ls_flag_src + " />" + "</span>" + _this.escape(ls_currencies[i].title) + ls_href_end + "</li>"; } } html += "</ul></div>"; ls_curr_switcher.innerHTML = html; break; case 'select': var select = document.createElement("SELECT"); for (i in ls_currencies) { if( ! ls_currencies.hasOwnProperty(i) ) { continue; } var option = document.createElement("OPTION"); option.text = ls_currencies[i].title; option.value = ls_currencies[i].currId; if (ls_currencies[i].currId === ls_currency) { option.selected = true; } select.add(option, null); } ls_curr_switcher.appendChild(select); break; } function setElementsIndexes(ls_curr_switcher) { if (ls_curr_switcher_style !== "ls-style-theme-b") { return true; } var styles, indexZ = 0, indexDirection = "up", totalIndexes = ls_currencies.length; [].forEach.call(ls_curr_switcher.querySelectorAll('li'), function (el) { if (el.classList.contains('ls-curr-switcher-active')) { indexZ = totalIndexes; indexDirection = "down"; } else { if (indexDirection === "up") { indexZ++; styles = "z-index:" + indexZ + "; direction: ltr;"; } else { indexZ--; styles = "z-index:" + indexZ + "; direction: rtl;"; } el.setAttribute('style', styles); } }); } setElementsIndexes(ls_curr_switcher); if (ls_curr_switcher_type === "select") { var selectElement = ls_curr_switcher.querySelector('select'); selectElement.addEventListener('change', function (evt) { var curr = evt.target.value; if (curr === ls_currency) { return false; } _this.cartLangUpdate(null, false, curr); var converters = document.querySelectorAll('.LS_converted_currencies'); if (converters.length) { [].forEach.call(converters, function (converter) { if (LS.localization.defaultCurrOnHover === "1") { if (curr !== _this.defaultCurr) { if (!converter.classList.contains('LS_show_on_hover')) { converter.classList.add('LS_show_on_hover'); } } else { converter.classList.remove('LS_show_on_hover'); } } if (curr in converter.dataset) { var priceToConvert = converter.previousSibling, newPrice = ( ls_currency in converter.dataset && priceToConvert.data.indexOf(converter.dataset[ls_currency]) >= 0 ) ? priceToConvert.data.replace(converter.dataset[ls_currency].trim(), converter.dataset[curr].trim()) : converter.dataset[curr].trim(); if (priceToConvert.nodeName === "#text") { if (priceToConvert.parentNode.nodeName === "SUP" && priceToConvert.parentNode.previousSibling.nodeName === "#text") { var priceArray = newPrice.split("<sup>"); priceToConvert.parentNode.previousSibling.data = priceArray[0]; if (priceArray[1]) { priceToConvert.data = priceArray[1]; } } else { priceToConvert.data = newPrice; } } } }); } ls_currency = curr; _this.setCookie('ls_curr', curr, 30); _this.currency = curr; document.dispatchEvent(new CustomEvent("langshop/currency/change", { detail: curr })); if( _this.urlModify === '1' ) { if( _this.currUrlPrefix in _this.urlParams ) { LS.location = LS.location.replace(_this.currUrlPrefix + "=" + _this.urlParams[_this.currUrlPrefix], _this.currUrlPrefix + "=" + curr); window.history.replaceState(null, null, LS.location); } else { LS.location = window.location.protocol + "//" + window.location.hostname + window.location.pathname + window.location.search; LS.location += ( (LS.location.indexOf("?") >= 0 ) ? "&" : "?" ) + _this.currUrlPrefix + "=" + curr; window.history.replaceState(null, null, LS.location); } } _this.urlParams[_this.currUrlPrefix] = curr; }); /* Trigger currency change if curr was changed in url params */ if( ls_currency !== _this.currency ) { selectElement.value = _this.currency; selectElement.dispatchEvent(new CustomEvent('change')); } } else { [].forEach.call(ls_curr_switcher.querySelectorAll('li'), function (el) { if(el.querySelector('a')) { el.querySelector('a').onclick = function( event ) { event.preventDefault(); } } el.addEventListener('click', function (evt) { var target = _this.getClickAncestor(evt.target, 'li'); var data = target.dataset; var currencySelected = target.dataset.currid; if (data.currid === ls_currency) { return false; } _this.cartLangUpdate(null, false, currencySelected); var converters = document.querySelectorAll('.LS_converted_currencies'); if (converters.length) { [].forEach.call(converters, function (converter) { if (LS.localization.defaultCurrOnHover === "1") { if (data.currid !== _this.defaultCurr) { if (!converter.classList.contains('LS_show_on_hover')) { converter.classList.add('LS_show_on_hover'); } } else { converter.classList.remove('LS_show_on_hover'); } } if (data.currid in converter.dataset) { var priceToConvert = converter.previousSibling, newPrice = ( ls_currency in converter.dataset && priceToConvert.data.indexOf(converter.dataset[ls_currency]) >= 0 ) ? priceToConvert.data.replace(converter.dataset[ls_currency].trim(), converter.dataset[data.currid].trim()) : converter.dataset[data.currid].trim(); if (priceToConvert.nodeName === "#text") { if (priceToConvert.parentNode.nodeName === "SUP" && priceToConvert.parentNode.previousSibling.nodeName === "#text") { var priceArray = newPrice.split("<sup>"); priceToConvert.parentNode.previousSibling.data = priceArray[0]; if (priceArray[1]) { priceToConvert.data = priceArray[1]; } } else { priceToConvert.data = newPrice; } } } }); } if (ls_curr_switcher_type === "li-horizontal-non-flags" || ls_curr_switcher_type === "li-horizontal-non-text" || ls_curr_switcher_type === "li-horizontal") { [].forEach.call(ls_curr_switcher.querySelectorAll('li'), function (el_li) { el_li.classList.remove("ls-curr-switcher-active"); }); target.classList.add("ls-curr-switcher-active"); setElementsIndexes(ls_curr_switcher); } else { var oldSelected = ls_curr_switcher.querySelector('.ls-curr-switcher-active'), oldSelectedHTML = oldSelected.innerHTML; oldSelected.setAttribute('data-currid', currencySelected); oldSelected.dataset.currid = currencySelected; var newSelected = target, newSelectedHTML = newSelected.innerHTML; newSelected.setAttribute('data-currid', ls_currency); newSelected.dataset.currid = ls_currency; newSelected.innerHTML = oldSelectedHTML; oldSelected.innerHTML = newSelectedHTML; if(newSelected.querySelector('a')) { newSelected.querySelector('a').onclick = function( event ) { event.preventDefault(); } } if(oldSelected.querySelector('a')) { oldSelected.querySelector('a').onclick = function( event ) { event.preventDefault(); } } } ls_currency = currencySelected; _this.setCookie('ls_curr', currencySelected, 30); _this.currency = currencySelected; document.dispatchEvent(new CustomEvent("langshop/currency/change", { detail: currencySelected })); if( _this.urlModify === '1' ) { if( _this.currUrlPrefix in _this.urlParams ) { LS.location = LS.location.replace(_this.currUrlPrefix + "=" + _this.urlParams[_this.currUrlPrefix], _this.currUrlPrefix + "=" + currencySelected); window.history.replaceState(null, null, LS.location); } else { LS.location = window.location.protocol + "//" + window.location.hostname + window.location.pathname + window.location.search; LS.location += ( (LS.location.indexOf("?") >= 0 ) ? "&" : "?" ) + _this.currUrlPrefix + "=" + currencySelected; window.history.replaceState(null, null, LS.location); } } _this.urlParams[_this.currUrlPrefix] = currencySelected; }); /* Trigger currency change if curr was changed in url params */ if( ls_currency !== _this.currency && el.dataset.currid === _this.currency ) { /* Custom click event for prevent dropdown opening */ el.dispatchEvent(new CustomEvent('click')); } }); } } }(LS.localization)); } </script>{% endif %}